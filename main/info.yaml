# NOTE: names in parentheses are special, all other names are not!
(project):
    
    # a central place for filepaths
    (path_to):
        project_root: "../"
        source_dir: ./
        main_test_video: &main_test_video ./_tests/data/test.avi
        main_test_image: ./_tests/data/test.png
        video_output: ./result.do_not_sync.mp4
        record_video_output_color: ./recorded_videos/recorded_video_with_color.do_not_sync.mp4
        kalman_video: ./kalman_video.do_not_sync.mp4
        npy_frames: ./scripts/data1 # replace with whichever frame set you want to use in the source/scripts/data<num> directory
        # model
        datasets: ./subsystems/modeling/datasets.ignore/
        model_weights: ./subsystems/modeling/model/yolov4-tiny-416.weights
        model_config: ./subsystems/modeling/model/yolov4-tiny-416.cfg
        model_labels: ./subsystems/modeling/model/yolov4-tiny-416.names
        model_trt: ./subsystems/modeling/model/yolov4-tiny-416.do_not_sync.trt
        frame_save_location: ./subsystems/modeling/_tests/test.do_not_sync.png
        #aiming
        R_test_image: ./_tests/data/mask_r_blur.png
        rune_test_video: ./_tests/data/rune3.mp4
        color_depth_bbox: ../output.do_not_sync.txt
    
    # this file will be generated automatically
    (local_data): ./local_data.ignore.yaml
            # this^ is where you choose which profile(s)
            # and is where to store auth tokens and other secrets
    
    (profiles):
        (default):
            our_team_color: 'red' # 'red' or 'blue'
            kalman_filters: false
            filter_team_color: true
            mode: development
            hardware:
                board: laptop
                camera: realsense # "realsense" or "zed"
                has_gpu: false
            model:
                hardware_acceleration: null # one of: [ null, "gpu", "tensor_rt" ]
                confidence: 0.8 # should be a value between 0-1
                threshold: 0.3  # should be a value between 0-1
                frequency: 30
                input_dimension: 416
            aiming:
                prediction_time: 2 # time interval in seconds to predict using kalman filters
                
                # depth camera
                stream_width: 848
                stream_height: 480
                stream_framerate: 30
                grid_size: 4
                horizontal_fov: 86
                vertical_fov: 57
                model_fps: 30
                bullet_velocity: 26
                length_barrel: .22
                camera_gap: -.034

                # Shooting Logic
                std_buffer_size: 1
                heat_buffer_size: 200
                rate_of_fire: 8
                idle_counter: 60
                std_error_bound: 60
                min_range: 1
                max_range: 5

                #power rune
                blue_light: [50,40,230]
                blue_dark: [130,255,255]
                area_arrow_bound: [30,500]
                center_image_offset: 20
                min_area: 400
                r_timer: 10

                #bullet drop
                barrel_camera_gap: 0.0364   # in meters
            videostream:
                simulation:
                    grab_method: 'next_frame' # 'next_frame', or 'latest_frame'
                    assumed_framerate: 30 # frames per second
                    input_file: *main_test_video
                
                testing:
                    record_time: 10 # seconds to record for
                    record_interval: 0 # records one out of every x frames, <1 to not record
            testing:
                disable_print: false
                save_frame_to_file: true
                open_each_frame: false
                filter_team_color: false
            embedded_communication:
                serial_baudrate: 115200
                serial_port: null
        
        # 
        # optionals (which are combined/merged with defaults)
        # 
        
        GPU=NONE:
            model:
                hardware_acceleration: null
        GPU=TENSOR_RT:
            model:
                hardware_acceleration: "TENSOR_RT"
        GPU=REGULAR:
            model:
                hardware_acceleration: "gpu"
        
        BOARD=TX2:
            model:
                hardware_acceleration: "tensor_rt"
            embedded_communication:
                # serial_port: "/dev/ttyACM0" # USB serial
                serial_port: "/dev/ttyTHS2" # UART serial
        BOARD=XAVIER:
            model:
                hardware_acceleration: "tensor_rt"
            embedded_communication:
                serial_port: "/dev/ttyTHS0" # UART serial 0 works but try 1
        BOARD=LAPTOP:
            model:
                hardware_acceleration: null
            embedded_communication:
                serial_port: null
            
        CAMERA=ZED:
            hardware:
                camera: zed
        CAMERA=REALSENSE:
            hardware:
                camera: realsense
        CAMERA=NONE:
            hardware:
                camera: null
        
        MODE=PRODUCTION:
            mode: production
            testing:
                disable_print: true
                save_frame_to_file: false
                open_each_frame: false
                filter_team_color: false
        MODE=DEVELOPMENT:
            mode: development
        
        TEAM=RED:
            our_team_color: 'red'
        TEAM=BLUE:
            our_team_color: 'blue'