#!/usr/bin/env bash

nix-env -iA nixpkgs.python38 -I nixpkgs=https://github.com/NixOS/nixpkgs/archive/3f50332bc4913a56ad216ca01f5d0bd24277a6b2.tar.gz
nix-env -iA nixpkgs.python38Packages.setuptools -I nixpkgs=https://github.com/NixOS/nixpkgs/archive/3f50332bc4913a56ad216ca01f5d0bd24277a6b2.tar.gz
nix-env -iA nixpkgs.python38Packages.pip -I nixpkgs=https://github.com/NixOS/nixpkgs/archive/3f50332bc4913a56ad216ca01f5d0bd24277a6b2.tar.gz
nix-env -iA nixpkgs.python38Packages.virtualenv -I nixpkgs=https://github.com/NixOS/nixpkgs/archive/3f50332bc4913a56ad216ca01f5d0bd24277a6b2.tar.gz
nix-env -iA nixpkgs.python38Packages.wheel -I nixpkgs=https://github.com/NixOS/nixpkgs/archive/3f50332bc4913a56ad216ca01f5d0bd24277a6b2.tar.gz
nix-env -iA nixpkgs.python38Packages.scipy -I nixpkgs=https://github.com/NixOS/nixpkgs/archive/3f50332bc4913a56ad216ca01f5d0bd24277a6b2.tar.gz
echo '

# TMPDIR fixes a pip issue
export TMPDIR="/tmp"
export VIRTUAL_ENV="$HOME/.venv"
export PATH="$VIRTUAL_ENV/bin:$PATH"
if ! [ -d "$VIRTUAL_ENV" ]
then
    echo "creating virtual env for python"
    python -m venv "$VIRTUAL_ENV" && echo "virtual env created"
fi

# fix SSL issues
export SSL_CERT_FILE="$(python -c '"'"'import ssl; print(ssl.get_default_verify_paths().openssl_cafile)'"'"')"  

' > "$shell_hooks_path/06_00_00_setup_venv.bash"
source "$shell_hooks_path/06_00_00_setup_venv.bash"